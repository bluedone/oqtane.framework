@namespace Oqtane.Shared
@inject IJSRuntime jsRuntime

@DynamicComponent

@code {
    [CascadingParameter] PageState PageState { get; set; }

    RenderFragment DynamicComponent { get; set; }

    protected override void OnParametersSet()
    {
        DynamicComponent = builder =>
        {
            Type themeType = Type.GetType(PageState.Page.ThemeType);
            if (themeType != null)
            {
                builder.OpenComponent(0, themeType);
                builder.CloseComponent();
            }
            else
            {
                // theme does not exist with type specified
                builder.OpenComponent(0, Type.GetType(Constants.ModuleMessageComponent));
                builder.AddAttribute(1, "Message", "Error Loading Page Theme " + PageState.Page.ThemeType);
                builder.CloseComponent();
            }
        };
    }
}
