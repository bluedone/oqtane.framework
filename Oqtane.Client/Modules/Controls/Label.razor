@namespace Oqtane.Modules.Controls
@inherits ModuleControlBase
@using Microsoft.Extensions.Localization

@if (!string.IsNullOrEmpty(HelpText))
{
    <span class="app-tooltip" data-tip="@((MarkupString)HelpText)">@((MarkupString)_openLabel)@ChildContent@((MarkupString)_closeLabel) <img src="images/help.png" /></span>
}
else
{
    @((MarkupString)_openLabel)@ChildContent@((MarkupString)_closeLabel)
}

@code {
    private string _openLabel = string.Empty;
    private string _closeLabel = "</label>";

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string For { get; set; } // optional - the id of the associated input control for accessibility

    [Parameter]
    public string Class { get; set; } // optional - the class for the label ( ie. control-label )

    [Parameter]
    public string HelpText { get; set; } // optional - tooltip for this label

    [Parameter]
    public string ResourceKey { get; set; }

    protected override void OnParametersSet()
    {
        _openLabel = "<label";
        if (!string.IsNullOrEmpty(For))
        {
            _openLabel += " for=\"" + For + "\"";
        }

        if (!string.IsNullOrEmpty(Class))
        {
            _openLabel += " class=\"" + Class + "\"";
        }

        _openLabel += ">";

        if (!string.IsNullOrEmpty(ResourceKey))
        {
            if (ModuleState?.ModuleType != null)
            {
                var moduleType = Type.GetType(ModuleState.ModuleType);
                var localizerTypeName = $"Microsoft.Extensions.Localization.IStringLocalizer`1[[{moduleType.AssemblyQualifiedName}]], Microsoft.Extensions.Localization.Abstractions";
                var localizerType = Type.GetType(localizerTypeName);

                // HACK: Use ServiceActivator instead of injecting IHttpContextAccessor, because HttpContext throws NRE in WebAssembly runtime
                using (var scope = ServiceActivator.GetScope())
                {
                    var localizer = (IStringLocalizer)scope.ServiceProvider.GetService(localizerType);

                    ChildContent = @<text>@localizer[$"{ResourceKey}.Text"]</text>;
                    HelpText = localizer[$"{ResourceKey}.{nameof(HelpText)}"];
                }
            }
        }
    }
}
