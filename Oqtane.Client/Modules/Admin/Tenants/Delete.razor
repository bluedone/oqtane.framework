@namespace Oqtane.Modules.Admin.Tenants
@inherits ModuleBase
@inject NavigationManager NavigationManager
@inject ITenantService TenantService

<table class="table table-borderless">
    <tr>
        <td>
            <label for="Name" class="control-label">Name: </label>
        </td>
        <td>
            <input class="form-control" @bind="@name" readonly />
        </td>
    </tr>
    <tr>
        <td>
            <label for="Name" class="control-label">Connection String: </label>
        </td>
        <td>
            <input class="form-control" @bind="@connectionstring" readonly />
        </td>
    </tr>
    <tr>
        <td>
            <label for="Name" class="control-label">Schema: </label>
        </td>
        <td>
            <input class="form-control" @bind="@schema" readonly />
        </td>
    </tr>
</table>
<button type="button" class="btn btn-success" @onclick="DeleteTenant">Delete</button>
<NavLink class="btn btn-secondary" href="@NavigateUrl()">Cancel</NavLink>

@code {
    public override SecurityAccessLevel SecurityAccessLevel { get { return SecurityAccessLevel.Host; } }

    int tenantid;
    string name = "";
    string connectionstring = "";
    string schema = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            tenantid = Int32.Parse(PageState.QueryString["id"]);
            Tenant tenant = await TenantService.GetTenantAsync(tenantid);
            if (tenant != null)
            {
                name = tenant.Name;
                connectionstring = tenant.DBConnectionString;
                schema = tenant.DBSchema;
            }
        }
        catch (Exception ex)
        {
            ModuleInstance.AddModuleMessage(ex.Message, MessageType.Error);
        }
    }
    private async Task DeleteTenant()
    {
        Tenant tenant = await TenantService.GetTenantAsync(tenantid);
        if (tenant != null)
        {
            await TenantService.DeleteTenantAsync(tenantid);
        }
        NavigationManager.NavigateTo(NavigateUrl());
    }
}
