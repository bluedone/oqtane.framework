@namespace Oqtane.Modules.Admin.Register
@inherits ModuleBase
@inject NavigationManager NavigationManager
@inject IUserService UserService

<div class="container">
    <div class="form-group">
        <label for="Username" class="control-label">Username: </label>
        <input type="text" class="form-control" placeholder="Username" @bind="@Username" />
    </div>
    <div class="form-group">
        <label for="Password" class="control-label">Password: </label>
        <input type="password" class="form-control" placeholder="Password" @bind="@Password" />
    </div>
    <div class="form-group">
        <label for="Username" class="control-label">Email: </label>
        <input type="text" class="form-control" placeholder="Username" @bind="@Email" />
    </div>
    <button type="button" class="btn btn-primary" @onclick="RegisterUser">Register</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</div>

@code {
    public override SecurityAccessLevel SecurityAccessLevel { get { return SecurityAccessLevel.Anonymous; } }

    string Username = "";
    string Password = "";
    string Email = "";

    private async Task RegisterUser()
    {
        try
        {
            if (Username != "" && Password != "" && Email != "")
            {
                User user = new User();
                user.SiteId = PageState.Site.SiteId;
                user.Username = Username;
                user.DisplayName = Username;
                user.Email = Email;
                user.Password = Password;
                await UserService.AddUserAsync(user);
                NavigationManager.NavigateTo(NavigateUrl(""));
            }
            else
            {
                ModuleInstance.AddModuleMessage("You Must Provide A Username, Password, and Email Address", MessageType.Warning);
            }
        }
        catch (Exception ex)
        {
            ModuleInstance.AddModuleMessage(ex.Message, MessageType.Error);
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo(NavigateUrl(""));
    }
}
