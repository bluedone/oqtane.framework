@using Microsoft.AspNetCore.Components.Routing
@using Oqtane.Client.Modules.Controls
@using Oqtane.Modules
@using Oqtane.Services
@using Oqtane.Shared
@inherits ModuleBase
@inject IUriHelper UriHelper
@inject IFileService FileService
@inject IModuleDefinitionService ModuleDefinitionService

<table class="table table-borderless">
    <tr>
        <td>
            <label for="Name" class="control-label">Module: </label>
        </td>
        <td>
            <FileUpload Filter=".nupkg"></FileUpload>
        </td>
    </tr>
</table>
@if (uploaded)
{
    <button type="button" class="btn btn-success" @onclick="InstallFile">Install</button>
}
else
{
    <button type="button" class="btn btn-success" @onclick="UploadFile">Upload</button>
}
<NavLink class="btn btn-secondary" href="@NavigateUrl()">Cancel</NavLink>

@code {
    public override SecurityAccessLevel SecurityAccessLevel { get { return SecurityAccessLevel.Host; } }

    bool uploaded = false;

    private async Task UploadFile()
    {
        await FileService.UploadFilesAsync("Modules");
        uploaded = true;
        StateHasChanged();
    }

    private async Task InstallFile()
    {
        await ModuleDefinitionService.InstallModulesAsync();
        PageState.Reload = Constants.ReloadApplication;
        UriHelper.NavigateTo(NavigateUrl());
    }
}
