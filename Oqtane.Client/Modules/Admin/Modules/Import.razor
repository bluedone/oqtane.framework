@namespace Oqtane.Modules.Admin.Modules
@inherits ModuleBase
@inject NavigationManager NavigationManager
@inject IModuleService ModuleService
@inject IStringLocalizer<Import> Localizer
@inject IStringLocalizer<SharedResources> SharedLocalizer

    <div class="container">
        <div class="row mb-1 align-items-center">
            <Label Class="col-sm-3" For="content" HelpText="Enter the module content" ResourceKey="Content">Content: </Label>
            <div class="col-sm-9">
                <textarea id="content" class="form-control" @bind="@_content" rows="5"></textarea>

            </div>
        </div>
    </div>

    <button type="button" class="btn btn-success" @onclick="ImportModule">@Localizer["Import"]</button>
    <NavLink class="btn btn-secondary" href="@NavigateUrl()">@SharedLocalizer["Cancel"]</NavLink>


    @code {
        private string _content = string.Empty;

        public override SecurityAccessLevel SecurityAccessLevel => SecurityAccessLevel.Admin;
        public override string Title => "Import Content";

        private async Task ImportModule()
        {
            if (_content != string.Empty)
            {
                try
                {
                    bool success = await ModuleService.ImportModuleAsync(ModuleState.ModuleId, _content);
                    if (success)
                    {
                        AddModuleMessage(Localizer["Success.Content.Import"], MessageType.Success);
                    }
                    else
                    {
                        AddModuleMessage(Localizer["Message.Content.ImportProblem"], MessageType.Warning);
                    }
                }
                catch (Exception ex)
                {
                    await logger.LogError(ex, "Error Importing Module {ModuleId} {Error}", ModuleState.ModuleId, ex.Message);
                    AddModuleMessage(Localizer["Error.Module.Import"], MessageType.Error);
                }
            }
            else
            {
                AddModuleMessage(Localizer["Message.Required.ImportContent"], MessageType.Warning);
            }
        }
    }
