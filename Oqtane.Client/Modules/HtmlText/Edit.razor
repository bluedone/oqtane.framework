@using Microsoft.AspNetCore.Components.Routing
@using Oqtane.Modules
@using Oqtane.Client.Modules.HtmlText.Services
@using Oqtane.Shared.Modules.HtmlText.Models
@using System.Net.Http;
@using Oqtane.Shared;
@inherits ModuleBase
@inject IUriHelper UriHelper
@inject HttpClient http
@inject SiteState sitestate

<form>
    <table class="form-group">
        <tr>
            <td>
                <label for="Name" class="control-label">Content: </label>
            </td>
            <td>
                <textarea class="form-control" @bind="@content" rows="5" style="width:400px;" />
            </td>
        </tr>
    </table>
    <button class="btn btn-success" @onclick="@SaveContent">Save</button>
    <NavLink class="btn btn-secondary" href="@NavigateUrl()">Cancel</NavLink>
</form>

@code {
    public override SecurityAccessLevelEnum SecurityAccessLevel { get { return SecurityAccessLevelEnum.Edit; } }
    public override string Title { get { return "Edit Html/Text"; } }

    HtmlTextInfo htmltext;
    string content;

    protected override async Task OnInitAsync()
    {
        HtmlTextService htmltextservice = new HtmlTextService(http, sitestate, UriHelper);
        List<HtmlTextInfo> htmltextlist = await htmltextservice.GetHtmlTextAsync(ModuleState.ModuleId);
        if (htmltextlist != null)
        {
            htmltext = htmltextlist.FirstOrDefault();
            content = htmltext.Content;
        }
    }

    private async Task SaveContent()
    {
        HtmlTextService htmltextservice = new HtmlTextService(http, sitestate, UriHelper);
        if (htmltext != null)
        {
            htmltext.Content = content;
            await htmltextservice.UpdateHtmlTextAsync(htmltext);
        }
        else
        {
            htmltext = new HtmlTextInfo();
            htmltext.ModuleId = ModuleState.ModuleId;
            htmltext.Content = content;
            await htmltextservice.AddHtmlTextAsync(htmltext);
        }
        UriHelper.NavigateTo(NavigateUrl(true));
    }
}
