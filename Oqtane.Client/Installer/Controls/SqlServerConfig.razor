@namespace Oqtane.Installer.Controls
@implements Oqtane.Interfaces.IDatabaseConfigControl
@inject IStringLocalizer<SqlServerConfig> Localizer

<div class="row mb-1 align-items-center">
    <Label Class="col-sm-3" For="server" HelpText="Enter the database server" ResourceKey="Server">Server:</Label>
    <div class="col-sm-9">
        <input id="server" type="text" class="form-control" @bind="@_server" />
    </div>
</div>
<div class="row mb-1 align-items-center">
    <Label Class="col-sm-3" For="database" HelpText="Enter the name of the database" ResourceKey="Database">Database:</Label>
    <div class="col-sm-9">
        <input id="database" type="text" class="form-control" @bind="@_database" />
    </div>
</div>
<div class="row mb-1 align-items-center">
    <Label Class="col-sm-3" For="security" HelpText="Select your security method" ResourceKey="Security">Security:</Label>
    <div class="col-sm-9">
        <select id="security" class="form-select custom-select" @bind="@_security">
            <option value="integrated" selected>@Localizer["Integrated"]</option>
            <option value="custom">@Localizer["Custom"]</option>
        </select>
    </div>
</div>
@if (_security == "custom")
{
    <div class="row mb-1 align-items-center">
        <Label Class="col-sm-3" For="uid" HelpText="Enter the username to use for the database" ResourceKey="Uid">User Id:</Label>
        <div class="col-sm-9">
            <input id="uid" type="text" class="form-control" @bind="@_uid" />
        </div>
    </div>
    <div class="row mb-1 align-items-center">
        <Label Class="col-sm-3" For="pwd" HelpText="Enter the password to use for the database" ResourceKey="Pwd">Password:</Label>
        <div class="col-sm-9">
            <input id="pwd" type="password" class="form-control" @bind="@_pwd" />
        </div>
    </div>
}

@code {
    private string _server = String.Empty;
    private string _database = "Oqtane-" + DateTime.UtcNow.ToString("yyyyMMddHHmm");
    private string _security = "integrated";
    private string _uid = String.Empty;
    private string _pwd = String.Empty;

    public string GetConnectionString()
    {
        var connectionString = String.Empty;

        if (!String.IsNullOrEmpty(_server) && !String.IsNullOrEmpty(_database))
        {
            connectionString = $"Data Source={_server};Initial Catalog={_database};";
        }

        if (_security == "integrated")
        {
            connectionString += "Integrated Security=SSPI;";
        }
        else
        {
            if (!String.IsNullOrEmpty(_uid) && !String.IsNullOrEmpty(_pwd))
            {
                connectionString += $"User ID={_uid};Password={_pwd};";
            }
            else
            {
                connectionString = String.Empty;
            }
        }

        return connectionString;
    }
}