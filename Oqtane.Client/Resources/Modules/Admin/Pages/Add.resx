<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Name.Text" xml:space="preserve">
    <value>Name: </value>
  </data>
  <data name="Parent.Text" xml:space="preserve">
    <value>Parent: </value>
  </data>
  <data name="Title.Text" xml:space="preserve">
    <value>Title: </value>
  </data>
  <data name="Settings.Heading" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SiteRoot" xml:space="preserve">
    <value>Site Root</value>
  </data>
  <data name="AtBeginning" xml:space="preserve">
    <value>At Beginning</value>
  </data>
  <data name="Before" xml:space="preserve">
    <value>Before</value>
  </data>
  <data name="After" xml:space="preserve">
    <value>After</value>
  </data>
  <data name="AtEnd" xml:space="preserve">
    <value>At End</value>
  </data>
  <data name="Page.Select" xml:space="preserve">
    <value>Select Page</value>
  </data>
  <data name="Container.Select" xml:space="preserve">
    <value>Select Container</value>
  </data>
  <data name="Error.Page.Initialize" xml:space="preserve">
    <value>Error Initializing Page</value>
  </data>
  <data name="Error.ChildPage.Load" xml:space="preserve">
    <value>Error Loading Child Pages For Parent</value>
  </data>
  <data name="Error.Pane.Load" xml:space="preserve">
    <value>Error Loading Pane Layouts For Theme</value>
  </data>
  <data name="Message.Page.Exists" xml:space="preserve">
    <value>A page with path {0} already exists for the selected parent page. The page path needs to be unique for the selected parent.</value>
  </data>
  <data name="Message.Required.PageInfo" xml:space="preserve">
    <value>You Must Provide Page Name, Theme, and Container</value>
  </data>
  <data name="Error.Page.Save" xml:space="preserve">
    <value>Error Saving Page</value>
  </data>
  <data name="Name.HelpText" xml:space="preserve">
    <value>Enter the page name</value>
  </data>
  <data name="Parent.HelpText" xml:space="preserve">
    <value>Select the parent for the page in the site hierarchy</value>
  </data>
  <data name="Insert.HelpText" xml:space="preserve">
    <value>Select the location where you would like the page to be inserted in relation to other pages</value>
  </data>
  <data name="Navigation.HelpText" xml:space="preserve">
    <value>Select whether the page is part of the site navigation or hidden</value>
  </data>
  <data name="UrlPath.HelpText" xml:space="preserve">
    <value>Optionally enter a url path for this page (ie. home ). If you do not provide a url path, the page name will be used.</value>
  </data>
  <data name="Redirect.HelpText" xml:space="preserve">
    <value>Optionally enter a url which this page should redirect to when a user navigates to it</value>
  </data>
  <data name="Title.HelpText" xml:space="preserve">
    <value>Optionally enter the page title. If you do not provide a page title, the page name will be used.</value>
  </data>
  <data name="Theme.HelpText" xml:space="preserve">
    <value>Select the theme for this page</value>
  </data>
  <data name="DefaultContainer.HelpText" xml:space="preserve">
    <value>Select the default container for the page</value>
  </data>
  <data name="Icon.HelpText" xml:space="preserve">
    <value>Optionally provide an icon class name for this page which will be displayed in the site navigation</value>
  </data>
  <data name="Personalizable.HelpText" xml:space="preserve">
    <value>Select whether you would like users to be able to personalize this page with their own content</value>
  </data>
  <data name="Insert.Text" xml:space="preserve">
    <value>Insert: </value>
  </data>
  <data name="Navigation.Text" xml:space="preserve">
    <value>Navigation? </value>
  </data>
  <data name="UrlPath.Text" xml:space="preserve">
    <value>Url Path: </value>
  </data>
  <data name="Redirect.Text" xml:space="preserve">
    <value>Redirect: </value>
  </data>
  <data name="Theme.Text" xml:space="preserve">
    <value>Theme: </value>
  </data>
  <data name="DefaultContainer.Text" xml:space="preserve">
    <value>Default Container: </value>
  </data>
  <data name="Icon.Text" xml:space="preserve">
    <value>Icon: </value>
  </data>
  <data name="Personalizable.Text" xml:space="preserve">
    <value>Personalizable? </value>
  </data>
  <data name="Appearance.Name" xml:space="preserve">
    <value>Appearance</value>
  </data>
</root>